package com.malware.zerver.service;

import com.malware.zerver.exception.SpringAuthenticationException;
import com.malware.zerver.repository.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;

import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.List;

@Service
public class UserDetailServiceImpl implements UserDetailsService {

    @Autowired
    UserRepository userRepository;

    @Autowired
    private PasswordEncoder passwordEncoder;

    @Override
    public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {
        ArrayList<GrantedAuthority> role = new ArrayList<>();

        com.malware.zerver.model.User user = userRepository.findByEmail(username);
        if(user != null){
            role.add((GrantedAuthority) () -> "ROLE_" + user.getRole());
//            if(user.getRole().equals("MANAGER")){
            return new User(user.getEmail(), user.getPassword(), role);
//            }
//            return new User(user.getEmail(), user.getPassword(), new ArrayList<>());
        }
        throw new SpringAuthenticationException(SpringAuthenticationException.ErrorMessages.USERNAME_NOT_FOUND);
    }

}
