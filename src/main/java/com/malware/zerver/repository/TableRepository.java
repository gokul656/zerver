package com.malware.zerver.repository;

import com.malware.zerver.model.TableOrder;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Modifying;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;

import javax.transaction.Transactional;
import java.util.HashSet;
import java.util.List;

@Repository
public interface TableRepository extends JpaRepository<TableOrder, Long> {

    List<TableOrder> findByTableId(String id);

    TableOrder findByfid(Integer fid);

    @Query("SELECT t FROM TableOrder t WHERE t.tableId=:tableId AND t.productId=:productId")
    TableOrder findByTableAndProduct(@Param("tableId") String tableId, @Param("productId") String productId);

    @Query("SELECT tableId from TableOrder")
    HashSet<String> findAllTables();

    @Query("SELECT t from TableOrder t WHERE t.fid=:fid")
    TableOrder findTableOrderById(@Param("fid") Integer fid);

    @Query("SELECT t from TableOrder t WHERE t.tableId=:tableId")
    List<TableOrder> findOrderByTable(@Param("tableId") String tableId);

    // DML
    @Modifying
    @Query("update TableOrder t set t.qty=:qty where t.fid=:fid")
    void updateData(@Param("qty") int qty, @Param("fid") int fid);

    // DLL
    @Transactional
    @Modifying
    @Query("DELETE from TableOrder t WHERE t.tableId=:tableId")
    void deleteOrderByTableId(@Param("tableId") String tableId);

}
